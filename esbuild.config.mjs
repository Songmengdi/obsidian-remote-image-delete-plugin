import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from 'fs';
import path from 'path';

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

let dest = '/Users/songmengdi/Documents/我的知识库/.obsidian/plugins/obsidian-remote-img-delete-plugin'
const destPath = path.join(dest, 'main.js');
const needCopy = ['styles.css','manifest.json']
// After the build, copy the output file to the specified directory
function copyFile() {
	needCopy.forEach(val => {
		fs.copyFileSync("./" + val, dest + '/' + val);
	})

}
const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: destPath,
	minify: prod,
});

if (prod) {
	await context.rebuild();
	copyFile();
	process.exit(0);
} else {
	// Watch for changes or rebuild in development
	await context.watch();
	copyFile();
}
